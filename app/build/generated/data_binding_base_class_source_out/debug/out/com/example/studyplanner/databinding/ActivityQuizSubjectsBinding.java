// Generated by view binder compiler. Do not edit!
package com.example.studyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQuizSubjectsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardComputerNetworks;

  @NonNull
  public final CardView cardDataWarehouse;

  @NonNull
  public final CardView cardInternetProgramming;

  @NonNull
  public final CardView cardSoftwareEngineering;

  @NonNull
  public final CardView cardTheoretical;

  @NonNull
  public final Toolbar toolbar;

  private ActivityQuizSubjectsBinding(@NonNull LinearLayout rootView,
      @NonNull CardView cardComputerNetworks, @NonNull CardView cardDataWarehouse,
      @NonNull CardView cardInternetProgramming, @NonNull CardView cardSoftwareEngineering,
      @NonNull CardView cardTheoretical, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.cardComputerNetworks = cardComputerNetworks;
    this.cardDataWarehouse = cardDataWarehouse;
    this.cardInternetProgramming = cardInternetProgramming;
    this.cardSoftwareEngineering = cardSoftwareEngineering;
    this.cardTheoretical = cardTheoretical;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuizSubjectsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuizSubjectsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_quiz_subjects, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuizSubjectsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardComputerNetworks;
      CardView cardComputerNetworks = ViewBindings.findChildViewById(rootView, id);
      if (cardComputerNetworks == null) {
        break missingId;
      }

      id = R.id.cardDataWarehouse;
      CardView cardDataWarehouse = ViewBindings.findChildViewById(rootView, id);
      if (cardDataWarehouse == null) {
        break missingId;
      }

      id = R.id.cardInternetProgramming;
      CardView cardInternetProgramming = ViewBindings.findChildViewById(rootView, id);
      if (cardInternetProgramming == null) {
        break missingId;
      }

      id = R.id.cardSoftwareEngineering;
      CardView cardSoftwareEngineering = ViewBindings.findChildViewById(rootView, id);
      if (cardSoftwareEngineering == null) {
        break missingId;
      }

      id = R.id.cardTheoretical;
      CardView cardTheoretical = ViewBindings.findChildViewById(rootView, id);
      if (cardTheoretical == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityQuizSubjectsBinding((LinearLayout) rootView, cardComputerNetworks,
          cardDataWarehouse, cardInternetProgramming, cardSoftwareEngineering, cardTheoretical,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
